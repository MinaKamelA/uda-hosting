version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.0
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  build:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - aws-cli/setup
      - aws-elastic-beanstalk/setup
      - run:
          name: configure eb
          command: |
            cd udagram-api
            eb init udagram-api --platform node.js --region us-east-1
            eb use udagram-api-dev
      - run:
         name: Install front-end dependencies
         command: |
            npm run frontend:install
      - run:
          name: Install back-end dependencies
          command: |
            npm run backend:install
      - run:
         name: Build front-end
         command: |
            npm run frontend:build
      - run:
          name: Build back-end
          command: |
            npm run backend:build
  test:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - run:
         name: Install front-end dependencies
         command: |
            npm run frontend:install
      - run:
          name: Test front-end
          command: |
            npm run frontend:test
      - run:
          name: Test front-end e2e
          command: |
            npm run frontend:e2e
  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.13'
      - checkout
      - run:
         name: Install front-end dependencies
         command: |
            npm run frontend:install
      - run:
          name: Install back-end dependencies
          command: |
            npm run backend:install
      - run:
          name: Deploy frontend
          command: |
            npm run frontend:deploy
      - run:
          name: EB set env
          command: |
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_DB=$POSTGRES_DB DB_PORT=$DB_PORT PORT=$PORT POSTGRES_HOST=$POSTGRES_HOST AWS_REGION=$AWS_DEFAULT_REGION AWS_PROFILE=$AWS_PROFILE AWS_BUCKET=$AWS_BUCKET URL=$URL JWT_SECRET=$JWT_SECRET
      - run:
          name: Deploy backend
          command: |
            eb deploy
workflows:
  version: 2
  udagram:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test